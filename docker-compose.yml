version: "2"

networks:
  application_network:
    driver: bridge
    name: application_network

# TODO: Include the spark service
services:

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - application_network

  kafka:
    image: docker.io/bitnami/kafka:3.1
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - application_network

  tweets_extract:
    build:
      dockerfile: docker/Dockerfile
      context: .
    container_name: tweets_extract
    environment:
      - KAFKA_SERVER=kafka:9092
      - KAFKA_TOPIC=tweets-raw
    env_file:
      - .env
    command: python scripts/tweets_extract.py
    depends_on:
      - kafka
      - mongo
    networks:
      - application_network
    restart: 'always'

  tweets_load:
    build:
      dockerfile: docker/Dockerfile
      context: .
    container_name: tweets_load
    environment:
      - KAFKA_SERVER=kafka:9092
      - KAFKA_TOPIC=tweets-final
      - MONGO_SERVER=mongo:27017
      - MONGO_DATABASE=tweets
      - MONGO_COLLECTION=tweets
    command: python scripts/tweets_load.py
    depends_on:
      - kafka
      - mongo
    networks:
      - application_network
    restart: 'always'

  mongo:
    image: mongo:5.0.6
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - application_network
    
